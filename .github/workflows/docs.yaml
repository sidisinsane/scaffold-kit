# yamllint disable rule:line-length
name: Docs

# yamllint disable-line rule:truthy
on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.3.0
        with:
          fetch-depth: 0

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v4.0.0

      - name: Cache dependencies
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          uv sync --extra docs

      - name: Build docs
        id: build-docs
        run: make docs-build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4.0.0
        with:
          path: site

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    environment:
      name: github-pages
    steps:
      - name: Check if GitHub Pages is enabled
        id: check-pages
        run: |
          echo "Checking if GitHub Pages is enabled..."
          api_url="https://api.github.com/repos/${{ github.repository }}/pages"
          status=$(curl -s -o response.json -w "%{http_code}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "$api_url")

          if [ "$status" -ne 200 ]; then
            echo "error=not_enabled" >> "$GITHUB_OUTPUT"
            echo "::error::GitHub Pages is not enabled for this repository."
            echo "Please go to Settings → Pages → Build and deployment and select 'GitHub Actions'."
            exit 1
          else
            echo "Pages API is accessible. Proceeding with deployment."
          fi
          echo "Add URL to About sidebar: Click About settings → Website and check 'Use your GitHub Pages website'."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
